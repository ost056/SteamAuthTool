name: Build SAT Linux, Windows

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [x64, arm64]  # Добавлены архитектуры для кросс-платформенной совместимости

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.9'

      - name: Install dependencies
        run: npm install

      - name: Package Steam Auth Tool app
        run: npm run dist -- --${{ matrix.arch }}
        env:
          CI: true

      - name: Set FILEPATH_VAR for x64, win
        if: matrix.arch == 'x64' && matrix.os == 'windows-latest'
        run: echo "FILEPATH_VAR=win-unpacked" >> $GITHUB_ENV
  
      - name: Set FILEPATH_VAR for arm64, win
        if: matrix.arch == 'arm64' && matrix.os == 'windows-latest'
        run: echo "FILEPATH_VAR=win-arm64-unpacked" >> $GITHUB_ENV

      - name: Set FILEPATH_VAR for x64, linux
        if: matrix.arch == 'x64' && matrix.os == 'ubuntu-latest'
        run: echo "FILEPATH_VAR=linux-unpacked" >> $GITHUB_ENV
  
      - name: Set FILEPATH_VAR for arm64, linux
        if: matrix.arch == 'arm64' && matrix.os == 'ubuntu-latest'
        run: echo "FILEPATH_VAR=linux-arm64-unpacked" >> $GITHUB_ENV

      - name: Set OS_VAR for win
        if: matrix.os == 'windows-latest'
        run: echo "OS_VAR=win" >> $GITHUB_ENV
  
      - name: Set OS_VAR for linux
        if: matrix.os == 'ubuntu-latest'
        run: echo "OS_VAR=linux" >> $GITHUB_ENV

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Steam_Auth_Tool_${{ env.OS_VAR }}_${{ matrix.arch }}
          path: dist/${{ env.FILEPATH_VAR }}
